names_sep <- paste0("name", 1:n_cols_max)
test_sep <-
test_tibble %>%
separate(name, into = names_sep, sep = rgx_split, fill = "right")
test_filter <-
test_sep %>%
filter(
name1 == "user_response" &
name2 == "slider_response" &
name3 == "response"
)
test_filter
library("jsonlite")
library("tidyverse")
path <- "~/desktop/urop-tessler-tenenbaum/mturk/sandbox-results/3BC9H1KCYU0NRFPQOVC3U0WRA5SYW1-3WQQ9FUS6BIJBQYQ62NEXSQKA1FB8H.json"
test_file <- fromJSON(paste(path))
tibble::glimpse(test_file)
# test_flat <- flatten(test_file)
# str(test_flat)
test_tibble <- enframe(unlist(test_file))
rgx_split <- "\\."
n_cols_max <-
test_tibble %>%
pull(name) %>%
str_split(rgx_split) %>%
map_dbl(~length(.)) %>%
max()
n_cols_max
names_sep <- paste0("name", 1:n_cols_max)
test_sep <-
test_tibble %>%
separate(name, into = names_sep, sep = rgx_split, fill = "right")
test_sep
test_filter <-
test_sep %>%
filter(
name1 == "user_response" &
name2 == "slider_response" &
name3 == "response"
)
test_filter
library("jsonlite")
library("tidyverse")
path <- "~/desktop/urop-tessler-tenenbaum/mturk/sandbox-results/3BC9H1KCYU0NRFPQOVC3U0WRA5SYW1-3WQQ9FUS6BIJBQYQ62NEXSQKA1FB8H.json"
test_file <- fromJSON(paste(path))
tibble::glimpse(test_file)
# test_flat <- flatten(test_file)
# str(test_flat)
test_tibble <- enframe(unlist(test_file))
rgx_split <- "\\."
n_cols_max <-
test_tibble %>%
pull(name) %>%
str_split(rgx_split) %>%
map_dbl(~length(.)) %>%
max()
n_cols_max
names_sep <- paste0("name", 1:n_cols_max)
test_sep <-
test_tibble %>%
separate(name, into = names_sep, sep = rgx_split, fill = "right")
test_sep
test_filter <-
test_sep %>%
filter(
name2 == "user_response"
)
test_filter
library("jsonlite")
library("tidyverse")
path <- "~/desktop/urop-tessler-tenenbaum/mturk/sandbox-results/3BC9H1KCYU0NRFPQOVC3U0WRA5SYW1-3WQQ9FUS6BIJBQYQ62NEXSQKA1FB8H.json"
test_file <- fromJSON(paste(path))
tibble::glimpse(test_file)
# test_flat <- flatten(test_file)
# str(test_flat)
test_tibble <- enframe(unlist(test_file))
rgx_split <- "\\."
n_cols_max <-
test_tibble %>%
pull(name) %>%
str_split(rgx_split) %>%
map_dbl(~length(.)) %>%
max()
n_cols_max
names_sep <- paste0("name", 1:n_cols_max)
test_sep <-
test_tibble %>%
separate(name, into = names_sep, sep = rgx_split, fill = "right")
test_sep
test_filter <-
test_sep %>%
filter(
name3 == "user_response"
)
test_filter
library("jsonlite")
library("tidyverse")
path <- "~/desktop/urop-tessler-tenenbaum/mturk/sandbox-results/3BC9H1KCYU0NRFPQOVC3U0WRA5SYW1-3WQQ9FUS6BIJBQYQ62NEXSQKA1FB8H.json"
test_file <- fromJSON(paste(path))
tibble::glimpse(test_file)
# test_flat <- flatten(test_file)
# str(test_flat)
test_tibble <- enframe(unlist(test_file))
rgx_split <- "\\."
n_cols_max <-
test_tibble %>%
pull(name) %>%
str_split(rgx_split) %>%
map_dbl(~length(.)) %>%
max()
n_cols_max
names_sep <- paste0("name", 1:n_cols_max)
test_sep <-
test_tibble %>%
separate(name, into = names_sep, sep = rgx_split, fill = "right")
test_sep
test_filter <-
test_sep %>%
filter(
name4 == "user_response"
)
test_filter
library("jsonlite")
library(purrr)
library(tidyverse)
path <- "c:/users/teresa/desktop/urop-tessler-tenenbaum/mturk/sandbox-results"
files <- dir(path)
jsonl <- map(files, function(f){(fromJSON(paste(path, f, sep="")))})
print("jsonl is:")
print(jsonl)
jsonc <- toJSON(jsonl)
print("jsonc is:")
print(jsonc)
write_json(toJSON(jsonl), "~/desktop/urop-tessler-tenenbaum/analysis/test.json")
library("jsonlite")
library(purrr)
library(tidyverse)
path <- "c:/users/teresa/desktop/urop-tessler-tenenbaum/mturk/sandbox-results"
files <- dir(path)
jsonl <- map(files, function(f){(fromJSON(paste(path, f, sep="")))})
print("jsonl is:")
print(jsonl)
library("jsonlite")
library("tidyverse")
library("jsonlite")
library(purrr)
library(tidyverse)
path <- "c:/users/teresa/desktop/urop-tessler-tenenbaum/mturk/sandbox-results"
files <- dir(path)
jsonl <- map(files, function(f){(fromJSON(paste(path, f, sep="")))})
for(jsonfile in jsonl) {
print("another!")
tibble::glimpse(jsonfile)
}
jsonc <- toJSON(jsonl)
print("jsonc is:")
print(jsonc)
write_json(toJSON(jsonl), "~/desktop/urop-tessler-tenenbaum/analysis/test.json")
path <- "~/desktop/urop-tessler-tenenbaum/mturk/sandbox-results/3BC9H1KCYU0NRFPQOVC3U0WRA5SYW1-3WQQ9FUS6BIJBQYQ62NEXSQKA1FB8H.json"
test_file <- fromJSON(paste(path))
tibble::glimpse(test_file)
# test_flat <- flatten(test_file)
# str(test_flat)
test_tibble <- enframe(unlist(test_file))
rgx_split <- "\\."
n_cols_max <-
test_tibble %>%
pull(name) %>%
str_split(rgx_split) %>%
map_dbl(~length(.)) %>%
max()
n_cols_max
names_sep <- paste0("name", 1:n_cols_max)
test_sep <-
test_tibble %>%
separate(name, into = names_sep, sep = rgx_split, fill = "right")
test_sep
test_filter <-
test_sep %>%
filter(
name4 == "user_response"
)
test_filter
library("jsonlite")
library("tidyverse")
library("jsonlite")
library(purrr)
library(tidyverse)
path <- "c:/users/teresa/desktop/urop-tessler-tenenbaum/mturk/sandbox-results"
files <- dir(path)
jsonl <- map(files, function(f){(fromJSON(paste(path, f, sep="")))})
for(jsonfile in jsonl) {
print("another!")
tibble::glimpse(jsonfile)
}
jsonc <- toJSON(jsonl)
print("jsonc is:")
print(jsonc)
write_json(toJSON(jsonl), "~/desktop/urop-tessler-tenenbaum/analysis/test.json")
?map
library("jsonlite")
library("tidyverse")
library("jsonlite")
library(purrr)
library(tidyverse)
path <- "c:/users/teresa/desktop/urop-tessler-tenenbaum/mturk/sandbox-results"
files <- dir(path)
print("files")
print(files)
jsonl <- map(files, function(f){(fromJSON(paste(path, f, sep="")))})
for(jsonfile in jsonl) {
print("another!")
tibble::glimpse(jsonfile)
}
jsonc <- toJSON(jsonl)
print("jsonc is:")
print(jsonc)
write_json(toJSON(jsonl), "~/desktop/urop-tessler-tenenbaum/analysis/test.json")
library("jsonlite")
library("tidyverse")
library("jsonlite")
library(purrr)
library(tidyverse)
path <- "../mturk/sandbox-results"
files <- dir(path)
print("files")
print(files)
jsonl <- map(files, function(f){fromJSON(paste(path, f, sep=""))})
for(jsonfile in jsonl) {
print("another!")
tibble::glimpse(jsonfile)
}
jsonc <- toJSON(jsonl)
print("jsonc is:")
print(jsonc)
write_json(toJSON(jsonl), "~/desktop/urop-tessler-tenenbaum/analysis/test.json")
library("jsonlite")
library("tidyverse")
library("jsonlite")
library(purrr)
library(tidyverse)
path <- "../mturk/sandbox-results"
files <- dir(path)
print("files")
print(files)
jsonl <- map(files, function(f){fromJSON(paste(path, f, sep=""))})
for(jsonfile in jsonl) {
print("another!")
tibble::glimpse(jsonfile)
print(jsonfile)
}
jsonc <- toJSON(jsonl)
print("jsonc is:")
print(jsonc)
write_json(toJSON(jsonl), "~/desktop/urop-tessler-tenenbaum/analysis/test.json")
library("jsonlite")
library("tidyverse")
library("jsonlite")
library(purrr)
library(tidyverse)
path <- "../mturk/sandbox-results"
files <- dir(path)
print("files")
print(files)
jsonl <- map(files, function(f){fromJSON(paste(path, f, sep=""))})
for(jsonfile in jsonl) {
print("another!")
tibble::glimpse(jsonfile)
print(jsonfile)
}
jsonc <- toJSON(jsonl)
print("jsonc is:")
print(jsonc)
write_json(toJSON(jsonl), "~/desktop/urop-tessler-tenenbaum/analysis/test.json")
library("jsonlite")
library("tidyverse")
folder_path = "c:/users/teresa/desktop/urop-tessler-tenenbaum/mturk/sandbox-results/"
print(folder_path)
merge_files(folder_path, paste(folder_path,"combined.json"))
library("jsonlite")
library("tidyverse")
library("geojsonR")
folder_path = "../mturk/sandbox-results/"
print(folder_path)
merge_files(folder_path, paste(folder_path,"combined.json"))
library("jsonlite")
library("tidyverse")
library("geojsonR")
folder_path = "../../mturk/sandbox-results/"
print(folder_path)
merge_files(folder_path, paste(folder_path,"combined.json"))
?pwd
pwd
??pwd
library("jsonlite")
library("tidyverse")
library("geojsonR")
folder_path = "../../mturk/sandbox-results/"
pwd
print(folder_path)
merge_files(folder_path, paste(folder_path,"combined.json"))
getwd()
../mturk/sandbox-results
..
cd ../mturk/sandbox_results
cd ..
cd..
getwd()
?setwd
setwd("urop-tessler-tenenbaum")
setwd("desktop/urop-tessler-tenenbaum")
getwd()
setwd("~/Desktop/urop-tessler-tenenbaum/analysis")
library("jsonlite")
library("tidyverse")
library("geojsonR")
folder_path = "../mturk/sandbox-results/"
print(folder_path)
merge_files(folder_path, paste(folder_path,"combined.json"))
library("jsonlite")
library("tidyverse")
library("geojsonR")
folder_path = "../mturk/sandbox-results/"
print(folder_path)
merge_files(folder_path, paste(folder_path,"combined.json"))
jsonified = fromJSON(paste(folder_path, "combined.json"))
library("jsonlite")
library("tidyverse")
library("geojsonR")
folder_path = "../mturk/sandbox-results/"
combined_path = paste(folder_path,"combined.json")
merge_files(folder_path, combined_path)
combined_files = stream_in(file(combined_path))
?stream_in
library("jsonlite")
library("tidyverse")
library("geojsonR")
folder_path = "../mturk/sandbox-results/"
combined_path = paste(folder_path,"combined.json")
merge_files(folder_path, combined_path)
combined_files = stream_in(file(paste(combined_path)))
library("jsonlite")
library("tidyverse")
library("geojsonR")
folder_path = "../mturk/sandbox-results/"
combined_path = paste(folder_path,"combined.json")
merge_files(folder_path, combined_path)
combined_files = jsonlite::stream_in(file(paste(combined_path)))
combined_files = stream_in(file(paste(combined_path)))
library("jsonlite")
library("tidyverse")
library("geojsonR")
folder_path = "../mturk/sandbox-results/"
combined_path = paste(folder_path,"combined.json")
merge_files(folder_path, combined_path)
combined_files = stream_in(file(paste(combined_path)))
library("jsonlite")
library("tidyverse")
library("geojsonR")
folder_path = "../mturk/sandbox-results/"
combined_path = paste(folder_path,"combined.json")
merge_files(folder_path, combined_path)
combined_files = stream_in(file(combined_path))
library("jsonlite")
library("tidyverse")
library("geojsonR")
folder_path = "../mturk/sandbox-results/"
combined_path = paste(folder_path,"combined.json")
merge_files(folder_path, combined_path)
combined_files = stream_in(file(combined_path))
library("jsonlite")
library("tidyverse")
library("geojsonR")
folder_path = "../mturk/sandbox-results/"
files <- dir(path)
json_read <- function(f){
test_file = fromJSON(paste(path, f, sep=""))
return(test_file$answers$trials_data)
}
json_extracted <- map(files, json_read)
library("rjson")
library(json)
install.packages("rjson")
library("rjson")
library("rjson")
library("jsonlite")
library("tidyverse")
library("geojsonR")
folder_path = "../mturk/sandbox-results/"
files <- dir(path)
json_read <- function(f){
test_file = fromJSON(paste(path, f, sep=""))
print(test_file$answers$trials_data)
return(test_file$answers$trials_data)
}
json_extracted <- map(files, json_read)
library("rjson")
library("jsonlite")
library("tidyverse")
library("geojsonR")
folder_path = "../mturk/sandbox-results/"
files <- dir(path)
getwd()
json_read <- function(f){
test_file = fromJSON(paste(path, f, sep=""))
print(test_file$answers$trials_data)
return(test_file$answers$trials_data)
}
getwd()
json_extracted <- map(files, json_read)
library("rjson")
library("jsonlite")
library("tidyverse")
library("geojsonR")
folder_path = "../mturk/sandbox-results/"
files <- dir(folder_path)
getwd()
json_read <- function(f){
test_file = fromJSON(paste(folder_path, f, sep=""))
print(test_file$answers$trials_data)
return(test_file$answers$trials_data)
}
getwd()
json_extracted <- map(files, json_read)
library("rjson")
library("jsonlite")
library("tidyverse")
library("geojsonR")
folder_path = "~/desktop/urop-tessler-tenenbaum/mturk/sandbox-results/"
files <- dir(folder_path)
getwd()
json_read <- function(f){
test_file = fromJSON(paste(folder_path, f, sep=""))
print(test_file$answers$trials_data)
return(test_file$answers$trials_data)
}
getwd()
json_extracted <- map(files, json_read)
library("rjson")
library("jsonlite")
library("tidyverse")
library("geojsonR")
folder_path = "c:/users/teresa/desktop/urop-tessler-tenenbaum/mturk/sandbox-results/"
files <- dir(folder_path)
getwd()
json_read <- function(f){
test_file = fromJSON(paste(folder_path, f, sep=""))
print(test_file$answers$trials_data)
return(test_file$answers$trials_data)
}
getwd()
json_extracted <- map(files, json_read)
library("rjson")
library("jsonlite")
library("tidyverse")
library("geojsonR")
folder_path = "../mturk/sandbox-results/"
files <- dir(folder_path)
getwd()
json_read <- function(f){
fromJSON(paste(folder_path, f, sep=""))
}
getwd()
json_extracted <- map(files, json_read)
install.packages("rjsonio")
install.packages("RJSONIO")
install.packages("jsonlite")
install.packages("jsonlite")
library("rjson")
library("RJSONIO")
library("jsonlite")
library("tidyverse")
library("geojsonR")
folder_path = "../mturk/sandbox-results/"
files <- dir(folder_path)
getwd()
json_read <- function(f){
fromJSON(paste(folder_path, f, sep=""))
}
getwd()
json_extracted <- map(files, json_read)
?write_json
library("rjson")
library("RJSONIO")
library("jsonlite")
library("tidyverse")
library("geojsonR")
folder_path = "../mturk/sandbox-results/"
files <- dir(folder_path)
getwd()
json_read <- function(f){
fromJSON(paste(folder_path, f, sep=""))
}
getwd()
json_extracted <- map(files, json_read)
write_json(toJSON(json_extracted), "json_extracted.json")
library("rjson")
library("RJSONIO")
library("jsonlite")
library("tidyverse")
library("geojsonR")
folder_path = "../mturk/sandbox-results/"
files <- dir(folder_path)
getwd()
json_read <- function(f){
open_file = fromJSON(paste(folder_path, f, sep=""))
return(open_file$answers$trials_data)
}
getwd()
json_extracted <- map(files, json_read)
write_json(toJSON(json_extracted), "json_extracted.json")
source('~/Desktop/urop-tessler-tenenbaum/analysis/test4.R')
